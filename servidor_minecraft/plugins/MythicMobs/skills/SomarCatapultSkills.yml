CPrepareModelSomar:
  Skills:
    - model{mid=CatapultaSomarfinal;n="Somar Catapult";ride=true}
    - skill{s=CrearVarPriori}
    - delay 10
    - setvariable{var=caster.solds;t=string;value="false"}
#    - setvariable{var=caster.etapaSolds;t=string;value="sinSolds"}
    - setvariable{var=caster.sold1;t=String;value="false"}
    - delay 10
    - setvariable{var=caster.sold2;t=String;value="false"}
    - delay 10
    - setvariable{var=caster.sold3;t=String;value="false"}
#    - sudoparent @NearestPlayer
    - command{c="summon minecraft:armor_stand ~ ~1 ~";at=true;op=true} @self

AvisOrdenaVariabP: #variableprioridad
#  Conditions:
#  - comparevalues{value1="<caster.var.priori>";type=Integer;operator=>;value2="<target.var.priori>"}
  TargetConditions:
  - (isMythicMob true && variableisset{s=caster;var=priori})
  Skills:
  - message{m="la variable coincide"}
#  - variablesubtract{}
  - projectile{bullet=block;material=STONE}
  - SudoSkill{s=restarVariabP;setcasterastrigger=true}

restarVariabP:
 Conditions:
  - variableInRange{var=caster.priori;value=><trigger.var.priori>}
 Skills:
  - message{m="Me enviaron <trigger.var.priori> y es menor que el mio"} @NearestPlayer
#  - variablesubtract{}
  - projectile{bullet=block;material=STONE} trigger
  - variablesubtract{var=target.priori;type=INTEGER;a=1} @Self

restarVariabPGlobal:
  Skills:
  - variablesubtract{var=world.priori;type=INTEGER;a=1} @self

CrearVarPriori:
  Conditions:
  - variableisset{s=world;var=priori} castInstead ObtenerVarPriori
  Skills:
  - setvariable{var=world.priori;type=INTEGER;value=1}
  - setvariable{var=caster.priori;type=INTEGER;value=1}
ObtenerVarPriori:
  Skills:
  - variableadd{var=world.priori;a=1}
  - delay 5
  - setvariable{var=caster.priori;type=INTEGER;value=<world.var.priori>}

Pruebas:
  Skills:
  - msg{m="Priori statica para catapultas <world.var.priori>"} @NearestPlayer
#    - setFaction{faction=Somar} @NearestPlayer
#soldsApuntar:
#  Skills:
#    - missile{bullet=block;material=STONE;g=-1;mr=500;Ho=100;v=10;intertia=80.0}

#AvanzarAnimation:
#  Skills:
#     - state{mid=SomarSoldier;s=animationEmpujarDerecha} @UniqueIdentifier{uuid=<caster.var.sold2>}
#     - state{mid=SomarSoldier;s=animationEmpujarIzquierda} @UniqueIdentifier{uuid=<caster.var.sold3>}

#EmpujarDerechaAnimation:
#  Skills:
#     - state{mid=SomarSoldier;s=animationEmpujarDerecha} @UniqueIdentifier{uuid=<caster.var.sold2>}

#EmpujarIzquierdaAnimation:
#  Skills:
#     - state{mid=SomarSoldier;s=animationEmpujarIzquierda} @UniqueIdentifier{uuid=<caster.var.sold3>}

Disparar:
  Skills:
    - skill{s=lanzarBloque}
#CargarBloque:

lanzarBloque:
  Cooldown: 15
  Skills:
    - state{mid=CatapultaSomarfinal;s=animationLanzarBloque3} @Self
#    - message{m="disparando"} @NearestPlayer
    - delay 55
    - projectile{bullet=block;material=STONE;vO=1.3;g=0.17;v=21;syo=15;sfo=1.8;mr=500;int=0.001;onHitBlockSkill=explocion;dd=300} @Forward{a=10}

ContornoVariabs: 
  TargetConditions:
#   - (isMythicMob || isPlayer) true
  - isLiving true
  - gamemode
  Skills:
    - setvariable{var=target.posc;t=string;value="derecha"} @LivingInCone{a=120;r=5;rot=270;conditions=[
                              - (isMythic true || isPlayer true) true]}
    - setvariable{var=target.posc;t=string;value="izquierda"} @LivingInCone{a=120;r=5;rot=60;conditions=[
                              - (isMythic true || isPlayer true) true]}
    - setvariable{var=target.posc;t=string;value="atras"} @LivingInCone{a=30;r=12;rot=190;conditions=[
                              - (isMythic true || isPlayer true) true]}
    - setvariable{var=target.posc;t=string;value="lejos"} @EIRR{min=8;max=10;conditions=[
                              - (isMythic true || isPlayer true) true]}
    - setvariable{var=target.posc;t=string;value="Muylejos"} @EIRR{min=11;max=20;conditions=[
                              - isMythic true]}
Accion:
  TriggerConditions:
    - variableEquals{key=caster.posc;value="derecha"} Cast GirarDerecha
    - variableEquals{key=caster.posc;value="izquierda"} Cast GirarIzquierda
    - variableEquals{key=caster.posc;value="atras"} Cast Disparar
#    - variableEquals{key=target.posc;value="lejos"} true
  Skills:
    - cancelevent
    - message{m="Priori de catapulta <caster.var.priori>"} @NearestPlayer #temporal para ver ajuste de prioridad por catapulta
filtrarDano:
  TriggerConditions:
    - (itemissimilar{item=iron_axe} || itemissimilar{item=stone_axe} || itemissimilar{item=diamond_axe} 
      || itemissimilar{item=golden_axe} || itemissimilar{item=netherite_axe}) orElseCast Accion
  Skills:
GirarDerecha:
  Skills:
    - cancelevent
    - message{m="interactuandoD"} @NearestPlayer
    - setrotation{relative=true;pitch=0;yaw=15} @Self
GirarIzquierda:
  Skills:
    - cancelevent
    - message{m="interactuandoI"} @NearestPlayer
    - setrotation{relative=true;pitch=0;yaw=-15} @Self
explocion:
  Skills:
    - explosion{fire=true;y=10;bd=true} @Origin
    - effect:particles @RandomLocationsNearOrigin{r=4;a=7}
    - delay 10
    - throw{velocity=15;velocityY=5} @EntitiesNearOrigin{r=7}
    - effect:particles @RandomLocationsNearOrigin{r=10;a=20}
montarCtp:
  Skills:
    - mountmodel{mid=CatapultaSomarfinal;mode=walking;driver=false;pbone=asientoprinc,asientoIzq,asientoDere}
soldEmpjCtp:
  Skills:
    - dismountall{mid=CatapultaSomarfinal;p=asientoprinc,asientoIzq,asientoDere;sync=true} @self
soldEmpjCtpDere:
  Skills:
    - mountmodel{mid=CatapultaSomarfinal;mode=walking;driver=false;pbone=empujar_posc_Dere}
soldEmpjCtpIzq:
  Skills:
    - mountmodel{mid=CatapultaSomarfinal;mode=walking;driver=false;pbone=empujar_posc_Izq}
DesmontarCtp:
  Skills:
    - dismountall{mid=CatapultaSomarfinal;p=asientoprinc,asientoIzq,asientoDere;sync=true} @self
DesmontarIzqCtp:
  Skills:
    - dismountall{mid=CatapultaSomarfinal;p=asientoIzq;sync=true} @self
DesmontarDereCtp:
  Skills:
    - dismountall{mid=CatapultaSomarfinal;p=asientoDere;sync=true} @self

MarcCatapult1:
  TargetConditions:
    - variableEquals{var=caster.catapulta;t=INTEGER;value=0}
  Skills:
    - message{m="&a Soldado - 1 por reclutar"} @NearestPlayer
    - setvariable{var=target.catapultuuid;t=String;value="<caster.uuid>"} @Target
    - setvariable{var=target.catapulta;t=INTEGER;value=1} @Target
    - sudoSkill{s=reportarseACatapult1} @Target
    - setFaction{faction=SomarCatapultero} @Target
    - projectile{bullet=block;material=STONE} @Target
    - clearthreat @Self
MarcCatapult2:
  Conditions:
    - variableEquals{var=caster.sold2;t=String;value="false"} orElseCast MarcCatapult1
  Skills:
    - skill{s=Pruebas}
    - setvariable{var=caster.sold2;t=String;value="reclutando"}
    - delay 10
    - message{m="&a Soldado - 2 por reclutar"} @NearestPlayer
    - setvariable{var=target.catapultuuid;t=String;value="<caster.uuid>"} @Target
    - setvariable{var=target.catapulta;t=INTEGER;value=2} @Target
    - sudoSkill{s=reportarseACatapult2} @Target
    - setFaction{f=SomarCatapultero} @Target
    - projectile{bullet=block;material=STONE} @Target
    - clearthreat @Self
MarcCatapult3:
  Conditions:
    - variableEquals{var=caster.sold3;t=String;value="false"} orElseCast MarcCatapult2
  Skills:
    - delay 3
    - setvariable{var=caster.sold3;t=String;value="reclutando"}
    - delay 10
    - message{m="&a Soldado - 3 por reclutar"} @NearestPlayer
    - setvariable{var=target.catapultuuid;t=String;value="<caster.uuid>"} @Target
    - setvariable{var=target.catapulta;t=INTEGER;value=3} @Target
    - sudoSkill{s=reportarseACatapult3} @Target
    - setFaction{f=SomarCatapultero} @Target
    - projectile{bullet=block;material=STONE} @Target
    - clearthreat @Self

revSoldCtp:
  TargetConditions:
    - faction{f=Somar} castInstead MarcCatapult3
  Skills:
    - msg{m="&9No objetivos"} @NearestPlayer
ctprsPerdidos:
  Cooldown: 25
  Conditions:
  - (variableEquals{var=caster.sold1;t=String;value="false"} || variableEquals{var=caster.sold2;t=String;value="false"} 
    || variableEquals{var=caster.sold3;t=String;value="false"}) castInstead revSoldCtp
  Skills:
  #- globalcooldown{ticks=20}
  - msg{m="&9 Soldados completos"} @NearestPlayer

#avisJugador:
#  Skills:
#    - msg{m="Se te invito a ser catapultero, en el puesto <target.var.catapulta>"} @Target
Mira:
 Skills:
    - particles{p=Electric_Spark;size=60;a=1;uel=true;forwardOffset=3;yOffset=5;vd=1} @Self
    - particles{p=flame;size=0.001;a=1;uel=true;forwardOffset=3;yOffset=9.3;vd=1;vs=0} @Ring{rotationz=8;relative=true;r=0.5;p=10}