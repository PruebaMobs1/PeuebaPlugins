Pruebavariable:
  Skills:
    - message{m="&e Catapultero - <caster.var.catapulta> - de catapulta - <caster.var.catapultuuid>, estancia> <caster.type>"}
pruebaFaccion:
  Conditions:
    - faction{faction=Somar} orElseCast noFaccion
  Skills:
    - msg{m="&4Faccion> Somar"} @NearestPlayer
noFaccion:
  Skills:
    - msg{m="&9Facci[on no es Somar"} @NearestPlayer
AtaqueSomarSoldier:
  Conditions:
    - variableEquals{key=caster.Animacion;value="dmg"} false
    - variableEquals{key=caster.Animacion;value="death"} false
  Skills:
    - cancelevent
#    - partvis{mid=SomarSoldier;p=right_sword;v=true} @Self
    - skill{s=AtaqueArea}
AtaqueUnico:
  Skills:
#    - setVariable{key=caster.ataque;t=String;value="true"} @Self
    - randomskill{s=AtaqueBase,AtaqueBase2,AtaqueBase3,Estocada}
    - message{m="Ataque Unico"} @World
AtaqueArea:
  Conditions:
  - targets{a=>1} orElseCast AtaqueUnico
  Skills:
  - message{m="Ataque area"} @World
  - randomskill{s=
    [- skill{s=AtaqueArea1} @LivingInCone{a=90;r=2;target=monster,player;ignore=samefaction}],
    [- skill{s=AtaqueArea2} @LivingInCone{a=120;r=2;target=monster,player;ignore=samefaction}],
    [- skill{s=AtaqueArea3} @EIR{r=3;target=monster;ignore=samefaction}],[- skill{s=AtaqueUnico}]}
AtaqueBase:
  Skills:
  - setVariable{key=caster.ataque;t=String;value="true"} @Self
  - state{mid=SomarSoldier;s=animationAtaqueComun} @Self
  - delay 7
  - damage{m=1} @target
  - delay 1
  - setVariable{key=caster.ataque;t=String;value="false"} @Self
  - delay 2
  - setVariable{key=caster.Animacion;t=String;value="idle"} @Self
#  - message{m="finAtaque"} @NearestPlayer
AtaqueBase2:
  Skills:
  - setVariable{key=caster.ataque;t=String;value="true"} @Self
#  - partvis{mid=SomarSoldier;p=left_sword} @Self
  - delay 1
  - state{mid=SomarSoldier;s=animationAtaqueComun2} @Self
  - delay 13
  - damage{m=1.5} @LivingInCone{a=20;r=3;limit=1}
  - delay 1
  - setVariable{key=caster.ataque;t=String;value="false"} @Self
  #- partvis{mid=SomarSoldier;p=left_sword;v=true} @Self
  - delay 2
  - setVariable{key=caster.Animacion;t=String;value="idle"} @Self
#  - message{m="finAtaque"} @NearestPlayer
AtaqueBase3:
  Skills:
  - setVariable{key=caster.ataque;t=String;value="true"} @Self
#  - partvis{mid=SomarSoldier;p=left_sword} @Self
  - delay 1
  - state{mid=SomarSoldier;s=animationAtaque1Izquierda;li=0;lo=0;pr=0} @Self
  - delay 6
  - damage{m=1.5} @LivingInCone{a=20;r=3;limit=1}
  - setVariable{key=caster.ataque;t=String;value="false"} @Self
  #- partvis{mid=SomarSoldier;p=left_sword;v=true} @Self
  - delay 2
  - setVariable{key=caster.Animacion;t=String;value="idle"} @Self
#  - message{m="finAtaque"} @NearestPlayer
Estocada:
  Skills:
  - setVariable{key=caster.ataque;t=String;value="true"} @Self
  - state{mid=SomarSoldier;s=animationAtaqueEstocadaDerecha;li=0;lo=1;pr=1} @Self
  - delay 18
  - throw{velocity=7;velocityY=2} 
  - damage{m=5} @LivingInCone{a=20;r=4;limit=1}
  - delay 2
  - setVariable{key=caster.ataque;t=String;value="false"} @Self
  - setVariable{key=caster.Animacion;t=String;value="idle"} @Self
#  - message{m="finAtaque"} @NearestPlayer
AtaqueArea1:
  Skills:
    - setVariable{key=caster.ataque;t=String;value="true"} @Self
    - state{mid=SomarSoldier;s=animationAtaqueArea1} @Self
    - delay 11
    - throw{velocity=12;velocityY=-1} 
    - damage{m=1}
    - delay 24
    - setVariable{key=caster.ataque;t=String;value="false"} @Self
    - delay 2
    - setVariable{key=caster.Animacion;t=String;value="idle"} @Self
#    - message{m="Ataque area uno1"} @NearestPlayer
AtaqueArea2:
  Skills:
    - setVariable{key=caster.ataque;t=String;value="true"} @Self
    - state{mid=SomarSoldier;s=animationAtaqueArea2} @Self
    - delay 15
    - throw{velocity=9;velocityY=2} 
    - basedamage{m=2}   
    - delay 40
    - setVariable{key=caster.ataque;t=String;value="false"} @Self
    - setVariable{key=caster.Animacion;t=String;value="idle"} @Self
#    - message{m="finAtaque"} @NearestPlayer
AtaqueArea3:
  Conditions:
    - targets{a=>3}
  Skills:
    - setVariable{key=caster.ataque;t=String;value="true"} @Self
    - state{mid=SomarSoldier;s=animationAtaqueArea3} @Self
    - delay 20
    - throw{velocity=30;velocityY=2} 
    - basedamage{m=2.5}   
    - delay 47
    - setVariable{key=caster.ataque;t=String;value="false"} @Self
    - setVariable{key=caster.Animacion;t=String;value="idle"} @Self
#    - message{m="finAtaque"} @NearestPlayer
persIdle:
  Conditions:
    - Moving{e=true} castInstead walkAnimation1 # La animación no debe estar activa
    - variableEquals{key=caster.ataque;value="false"}
    - variableEquals{key=caster.Animacion;value="dmg"} false
    - variableEquals{key=caster.Animacion;value="death"} false
  Skills:
    #- setVariable{key=caster.AnimacionCaminando;t=String;value="false"} @Self
    - setVariable{key=caster.Animacion;t=String;value="idle"} @self
    - state{mid=SomarSoldier;s=SupuestoIdle;li=0;lo=0;pr=0} @self
walk:
  Conditions:
    - Moving{e=true} castInstead walkAnimation1  # El mob debe estar caminando
    - targetwithin{d=3} false    # No debe haber un objetivo cercano
    - variableEquals{key=caster.Animacion;value="idle"}  # La animación no debe estar activa
  Skills:
    - setVariable{key=caster.Animacion;t=String;value="c"} @Self
    - state{mid=SomarSoldier;s=walk1(Normal)}     # Inicia la animación
    - delay 31
    - setVariable{key=caster.Animacion;t=String;value="idle"} @Self

walkAnimation1:
  Conditions:
    - Moving orElseCast persIdle     # El mob debe estar caminando
    - variableEquals{key=caster.Animacion;value="idle"}
    - variableEquals{key=caster.ataque;value="false"}
    - variableEquals{key=caster.Animacion;value="dmg"} false
    - variableEquals{key=caster.Animacion;value="death"} false
  Skills:
    - setVariable{key=caster.Animacion;t=String;value="c1"} @Self
    - state{mid=SomarSoldier;s=AnimationCaminarIzquierda} @Self
    - delay 15
    - skill{s=walkAnimation2} @Self
      
walkAnimation2:
  Conditions:
   - Moving orElseCast persIdle
   - variableEquals{key=caster.ataque;value="false"}
   - VariableEquals{key=caster.Animacion;t=String;value="c1"}
   - variableEquals{key=caster.Animacion;value="dmg"} false
   - variableEquals{key=caster.Animacion;value="death"} false
  Skills:
    - setVariable{key=caster.Animacion;t=String;value="c2"} @Self
    - state{mid=SomarSoldier;s=AnimationCaminarDerecha} @Self
    - delay 15
    - setVariable{key=caster.Animacion;t=String;value="idle"} @Self
DamagedAnimation:
  Conditions:
    - variableEquals{key=caster.ataque;value="false"}
    - damagecause{cause=ENTITY_ATTACK} orElseCast MuerteNormAnimation
    - variableEquals{key=caster.Animacion;value="dmg"} castinstead InmunityPerAnimation
  Skills:
    - setVariable{key=caster.Animacion;t=String;value="dmg"} @Self
#    - partvis{mid=SomarSoldier;p=right_sword;v=false} @Self
    - state{mid=SomarSoldier;s=AnimationDamaged} @Self
    - skill{s=MarcarAtacker}
    - delay 21
    - setVariable{key=caster.Animacion;t=String;value="idle"} @Self
InmunityPerAnimation:
  Skills:
    - msg{m=ya atacado pa} @World
MarcarAtacker:
  Conditions:
    - inCombat orElseCast MuerteNormAnimation
  TriggerConditions:
    - isLiving orElseCast MuerteNormAnimation
  Skills:
    - setvariable{var=caster.atackeruuid;type=STRING;val=<trigger.uuid>} @Self
MuerteExtAnimation:
  Conditions:
#    - chance{c=1} true
    - variableEquals{var=caster.atackeruuid;type=STRING;val="noUiid"} false
  TargetConditions:
    - isLiving true
  Skills:
    - defaultstate{mid=SomarSoldier;type=death;state=death2} @Self
    - setVariable{key=caster.Animacion;t=String;value="death"} @Self
    - Signal{s=killerAnimation}
    - state{mid=SomarSoldier;s=death2} @Self
    - msg{m=intentoEnviarSenal} @NearestPlayer

#Reportarse a catapulta
reportarseACatapult1:
  Skills:
    - setvariable{var=target.sold1;t=String;value="reclutando"} @UniqueIdentifier{uuid=<caster.var.catapultuuid>}
    - delay 10
    - setvariable{var=target.sold1;t=String;value="<caster.uuid>"} @UniqueIdentifier{uuid=<caster.var.catapultuuid>}
reportarseACatapult2:
  Skills:
    - setvariable{var=target.sold2;t=String;value="reclutando"} @UniqueIdentifier{uuid=<caster.var.catapultuuid>}
    - delay 10
    - setvariable{var=target.sold2;t=String;value="<caster.uuid>"} @UniqueIdentifier{uuid=<caster.var.catapultuuid>}
reportarseACatapult3:
  Skills:
    - setvariable{var=caster.sold3;t=String;value="reclutando"}@UniqueIdentifier{uuid=<caster.var.catapultuuid>}
    - delay 10
    - setvariable{var=target.sold3;t=String;value="<caster.uuid>"} @UniqueIdentifier{uuid=<caster.var.catapultuuid>}
#Ir a catapulta
IrACataputa:
  Cooldown: 80
  Skills:
    - goto{speedModifier=5;sh=5;sv=5} @UniqueIdentifier{uuid=<caster.var.catapultuuid>}
PosicSoldCatapultero:
  Conditions:
    - faction{f=SomarCatapultero} true
    - variableEquals{var=caster.posc;t=String;value="lejos"} castInstead CatapultaAlcanzada
  Skills:
#    - msg{m="&e llendo - soldado - <caster.var.catapulta>"} @NearestPlayer
    - skill{s=IrACataputa}
CatapultaAlcanzada:
  Conditions:
    - variableEquals{var=caster.catapulta;t=Integer;value=1} cast CtpPosicion1
    - variableEquals{var=caster.catapulta;t=Integer;value=2} cast CtpPosicion2
    - variableEquals{var=caster.catapulta;t=Integer;value=3} cast CtpPosicion3
  Skills:
CtpPosicion1:
  Conditions:
  - (variableEquals{var=caster.posc;t=String;value="derecha"} || variableEquals{var=caster.posc;t=String;value="izquierda"} || variableEquals{var=caster.posc;t=String;value="atras"})
  Skills:
  - sudoSkill{s=montarCtp;t=@Self} @UniqueIdentifier{uuid=<caster.var.catapultuuid>}
  - msg{m="&e llego - soldado - <caster.var.catapulta>"} @NearestPlayer
  - setai{ai=false}
CtpPosicion2:
    Conditions:
    - (variableEquals{var=caster.posc;t=String;value="derecha"} || variableEquals{var=caster.posc;t=String;value="izquierda"} || variableEquals{var=caster.posc;t=String;value="atras"})
    Skills:
    - sudoSkill{s=soldEmpjCtpIzq;t=@Self} @UniqueIdentifier{uuid=<caster.var.catapultuuid>}
     - msg{m="&e llego - soldado - <caster.var.catapulta>"} @NearestPlayer
    - setai{ai=false}
CtpPosicion3:
    Conditions:
      - (variableEquals{var=caster.posc;t=String;value="derecha"} || variableEquals{var=caster.posc;t=String;value="izquierda"} || variableEquals{var=caster.posc;t=String;value="atras"})
    Skills:
    - sudoSkill{s=soldEmpjCtpDere;t=@Self} @UniqueIdentifier{uuid=<caster.var.catapultuuid>}
    - msg{m="&e llego - soldado - <caster.var.catapulta>"} @NearestPlayer
    - setai{ai=false}

avisarIda:
  Conditions:
    - variableEquals{var=caster.catapulta;t=INTEGER;value=1} castInstead avisarIda1
    - variableEquals{var=caster.catapulta;t=INTEGER;value=2} castInstead avisarIda2
    - variableEquals{var=caster.catapulta;t=INTEGER;value=3} castInstead avisarIda3
#Como soldado 1
avisarIda1:
  Conditions:
    - faction{faction=SomarCatapultero}
  Skills:
    - setvariable{var=target.sold1;t=String;value="false"} @UniqueIdentifier{uuid=<caster.var.catapultuuid>}
#Como soldado 2
avisarIda2:
  Conditions:
    - faction{faction=SomarCatapultero}
  Skills:
    - setvariable{var=target.sold2;t=String;value="false"} @UniqueIdentifier{uuid=<caster.var.catapultuuid>}
#Como soldado 3
avisarIda3:
  Conditions:
    - faction{faction=SomarCatapultero}
  Skills:
    - setvariable{var=target.sold3;t=String;value="false"} @UniqueIdentifier{uuid=<caster.var.catapultuuid>}

acabarkillAnimation:
  Skills:
#    - partvis{mid=SomarSoldier;p=right_sword;v=true} @Self
#    - msg{m=intento}
    - state{mid=SomarSoldier;s=animationAcabarRival} @Self
MuerteNormAnimation:
  Skills:
    - defaultstate{mid=SomarSoldier;type=death;state=death1} @Self
PrepareModelSomar:
  Skills:
    - model{mid=SomarSoldier;n="Somar Soldier"}
    - delay 1
    - partvis{mid=SomarSoldier;p=auxblock}
    - partvis{mid=SomarSoldier;p=left_arco;v=false}
    - defaultstate{mid=SomarSoldier;type=death;state=death1;}
    - setVariable{key=caster.ataque;t=String;value="false"}
    - setVariable{key=caster.Animacion;t=String;value="idle"}
#    - defaultstate{mid=SomarSoldier;type=idle;state=SupuestoIdle} @Self
    - setvariable{var=caster.atackeruuid;type=STRING;val="noUiid"} @Self
    - setvariable{var=caster.catapulta;t=INTEGER;val=0} 
  